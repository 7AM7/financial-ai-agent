[pytest]
# Pytest configuration for Financial Data Backend

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    --showlocals
    # Show summary of all test outcomes
    -ra
    # Coverage options
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    # Strict markers
    --strict-markers
    # Fail on warnings
    -W error::DeprecationWarning
    # Asyncio mode
    --asyncio-mode=auto

# Markers for categorizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require database/external services)
    slow: Slow tests (> 1 second)
    agent: Tests for LangGraph agent workflows
    api: API endpoint tests

# Coverage settings
[coverage:run]
source = src
omit =
    tests/*
    **/__pycache__/*
    **/conftest.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

# Exclude lines from coverage
exclude_lines =
    # Standard pragma
    pragma: no cover
    # Don't complain about missing debug code
    def __repr__
    if self\.debug
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    # Don't complain if non-runnable code isn't run
    if 0:
    if __name__ == .__main__.:
    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
